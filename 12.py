import unicodedata
import html
def unicode_test(value):
	import unicodedata
	name = unicodedata.name(value)
	value2 = unicodedata.lookup(name)
	print('value="%s", name="%s", value2="%s"' % (value, name, value2))

# unicode_test('–∞')
# unicode_test('üòç')
# unicode_test('\u00a2')
# print(len('\u00a2'))
# unicode_test('\u00e9')

# –∫ —Å–∏–º–≤–æ–ª–∞–º Unicode –º–æ–∂–Ω–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫–∞–∫ –ø–æ –∫–æ–¥—É, —Ç–∞–∫ –∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
# http://www.unicode.org/charts/charindex.html
place = 'caf\u00e9'
place = 'caf\N{LATIN SMALL LETTER E WITH ACUTE}'
print(place)
place_bytes = place.encode('utf-8')
place2 = place_bytes.decode('utf-8')
print(place2)

snowman = '\u2603'
ds = snowman.encode('ascii', 'ignore')
print(ds)
ds = snowman.encode('ascii', 'replace')
print(ds)
ds = snowman.encode('ascii', 'backslashreplace')
print(ds)
ds = snowman.encode('ascii', 'xmlcharrefreplace')
print(ds)

# import html
# html-—Å—É—â–Ω–æ—Å—Ç–∏
print(html.unescape("&egrave;"))
print(html.unescape("&#233;"))

place = 'caf\u00e9'
byte_value = place.encode('ascii', 'xmlcharrefreplace')
# –ø–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–æ–∫—É –∏–∑ —Ç–∏–ø–∞ byte
print(byte_value.decode())

# import unicodedata
# –¢–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–¥–∏–º —Å–∏–º–≤–æ–ª e —Å –∞–∫—É—Ç–æ–º, –æ–±—ä–µ–¥–∏–Ω–∏–≤ –ø—Ä–æ—Å—Ç–æ–π —Å–∏–º–≤–æ–ª e –∏ –∞–∫—É—Ç
eacute_combined1 = "e\u0301"
print(eacute_combined1)
# –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏–º–≤–æ–ª–∞, —Ç–µ–ø–µ—Ä—å –æ–Ω —Å—Ç–∞–ª –æ–¥–Ω–∏–º (–∞ –Ω–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–µ–π –¥–≤—É—Ö) - –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å—Ç—Ä–æ–∫–∏ Unicode –º–æ–∂–Ω–æ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å
eacute_normalized = unicodedata.normalize('NFC', eacute_combined1)
print(unicodedata.name(eacute_normalized))
